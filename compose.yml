services:
  bot:
    build:
      context: /bot/
    container_name: bot
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SCRAPPER_LINK=http://host.docker.internal:8080
      - KAFKA_LINK=PLAINTEXT://kafka:9092
    depends_on:
      - scrapper
      - kafka
      - zookeeper
    ports:
      - 8090:8090
    networks:
      - backend

  scrapper:
    build:
      context: /scrapper/
    container_name: scrapper
    environment:
      - BOT_LINK=http://host.docker.internal:8090
      - DB_LINK=jdbc:postgresql://postgres:5432/scrapper
      - KAFKA_LINK=PLAINTEXT://kafka:9092
    depends_on:
      - kafka
      - zookeeper
      - postgresql
    ports:
      - 8080:8080
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - backend
    ports:
      - 29092:29092
    volumes:
      - kafka:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgresql:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: scrapper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"

  liquibase-migrations:
    image: liquibase/liquibase:4.25
    depends_on:
      - postgresql
    command:
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - backend

volumes:
  postgresql: { }
  kafka: { }

networks:
  backend: { }
