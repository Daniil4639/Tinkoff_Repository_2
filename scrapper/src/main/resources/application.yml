app:
  useQueue: true
  kafka:
    bootstrap-server: ${KAFKA_LINK}
    topic-name: update-messages-topic
    partitions-count: 2
    replication-count: 1
  database-access-type: jpa
  api:
    bot-base-url: ${BOT_LINK}
    github-base-url: https://api.github.com/
    stackoverflow-base-url: https://api.stackexchange.com/2.3/questions/
  retry-info:
    type: constant
    attempts: 3
    interval: 500
    codes: 500, 502, 503, 504
  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 10s

spring:
  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    cache-names:
      - rate-limit-buckets-scrapper
    caffeine:
      spec: maximumSize=10000,expireAfterAccess=120s
  jpa:
    show_sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        connection:
          driver_class: org.postgresql.Driver
          url: ${DB_LINK}
          username: postgres
          password: postgres
        hbm2ddl:
          auto: validate
  datasource:
    url: ${DB_LINK}
    username: postgres
    password: postgres
  liquibase:
    enabled: false
  application:
    name: scrapper

bucket4j:
  cache-to-use: jcache
  enabled: true
  filters:
    - cache-name: rate-limit-buckets-scrapper
      url: (?!.*(track|untrack)).*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"exceptionMessage\": \"Превышен лимит запросов. Попробуйте позже!\" }"
      rate-limits:
        - cache-key: "getHeader('X-Forwarded-For')"
          bandwidths:
            - capacity: 10
              time: 1
              unit: minutes
              refill-speed: interval

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  show-actuator: true
  swagger-ui:
    path: /swagger-ui
  api-docs:
    path: /api-docs
